weekn <- timeline$week
for (i in 1:length(unique(timeline$week))){
weekn <- gsub(unique(timeline$week)[[i]], i, weekn)
}
weekn
tvdata <- data.frame(
content= paste(strtrim(timeline$weekday,2), timeline$event, sep=": "),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
library(timevis)
weekn <- timeline$week
for (i in 1:length(unique(timeline$week))){
weekn <- gsub(unique(timeline$week)[[i]], i, weekn)
}
weekn
tvdata <- data.frame(
content= paste(strtrim(timeline$weekday,2), timeline$event, sep="<br> "),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:18px;'>",strtrim(timeline$weekday,"</p>")),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:18px;'>",strtrim(timeline$weekday),"</p>"),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:18px;'>",strtrim(timeline$weekday,2),"</p>"),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:5px;'>",strtrim(timeline$weekday,2),"</p>"),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:8px;'>",strtrim(timeline$weekday,2),"</p>"),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:8px;'>",strtrim(timeline$weekday,2),"</p>"),
timeline$event,
sep=", "),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='color:blue;font-size:8px;'>",strtrim(timeline$weekday,2)),
timeline$event,
sep=", "),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='font-size:10px;'>",strtrim(timeline$weekday,2)),
timeline$event,
sep="<br>"),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<p style='font-size:10px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, height=500,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, width=1000,height=500,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, width=1000,height=300,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, width=1000,height=400,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<style='font-size:10px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata, width=1000,height=400,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<span style='font-size:10px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata, width=1000,height=400,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata, width=1000,height=400,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, width=1000,height=500,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
?timevis
tvdata <- data.frame(
title=timeline$event,
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
# end=timeline$end
)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=timeline$end
)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=rep(NA, length(timeline$start))
)
tvdata <- dates
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
intervals <- dates
intervals
intervals$end <- timeline$end
intervals
tvdata <- rbind(dates, intervals)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata
intervals$end <- timeline$end
intervals
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn
)
intervals <- dates
intervals$end <- timeline$end
tvdata <- rbind(dates, intervals)
tvdata <- rbind(dates, intervals, fill=T)
tvdata <- rbind(dates, intervals, fill=T)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start)))
)
intervals <- dates
intervals$end <- timeline$end
intervals
tvdata <- rbind(dates, intervals)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start))),
type=rep("point", length(timeline$start))
)
intervals <- dates
intervals$end <- timeline$end
intervals$type <- rep("background", length(intervals))
intervals
intervals$type <- rep("background", length(intervals))
intervals$type <- rep("background", nrow(intervals))
intervals
tvdata <- rbind(dates, intervals)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
tvdata <- dates
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start)))
)
tvdata <- dates
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
timeline$week
unique(timeline$week)
unique(timeline$week)+6
as.Date(unique(timeline$week))+6
as.Date(unique(timeline$week))+5
as.Date(unique(timeline$week))+5 # saturday
as.Date(unique(timeline$week))+6 # saturday
as.Date(unique(timeline$week))+5 # saturday
as.Date(unique(timeline$week))+6 # saturday
weekends <- data.frame(
start=as.Date(unique(timeline$week))+5, # saturday
end=as.Date(unique(timeline$week))+6, # sunday
type="background"
)
tvdata <- rbind.fill(dates, weekends)
tvdata <- rbind(dates, weekends, fill=TRUE)
DT1 = data.table(a = 1:2, b = 1:2)
DT2 = data.table(a = 3:4, c = 1:2)
library(data.table)
tvdata <- rbind(dates, weekends, fill=TRUE)
library(plyr)
tvdata <- rbind.fill(dates, weekends)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start))),
type=rep("point", nrow(dates))
)
tvdata <- rbind.fill(dates, weekends)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start))),
type=rep("box", nrow(dates))
)
tvdata <- rbind.fill(dates, weekends)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start))),
type=rep("point", nrow(dates))
)
tvdata <- rbind.fill(dates, weekends)
tvdata <- rbind.fill(dates, weekends)
tvdata
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
library(vistime)
library(xlsx)
# read from file
timeline1 <- read.xlsx(paste0(getwd(), "/timeline.xlsx"),1)
timeline1$week <- as.character(cut(timeline1$start, # cut timepoints into weeks
breaks = "week",
start.on.monday = T))
timeline1$weekday <- weekdays(timeline1$start)
timeline1
preference <- read.xlsx(paste0(getwd(), "/timeline.xlsx"),2)
evaluate <- function(input, pref){
unlist(lapply(input, function(x){
pref[which(pref$weekday==x), "eval"]
}))
}
# iterate over 7 days
iters <- lapply(0:6, function(i){
out <- timeline1
out$start <- out$start+i
out$end <- out$end+i
out$week <- as.character(cut(out$start, # cut timepoints into weeks
breaks = "week",start.on.monday = T))
out$weekday <- weekdays(out$start)
out$eval <- evaluate(out$weekday, preference)
out
})
# score iterations
scores <- data.frame(iteration=0:6,
start = unlist(lapply(iters, function(x){x$weekday[[1]]})),
score = unlist(lapply(iters, function(x){sum(x$eval)})),
days = unlist(lapply(iters, function(x){
tbl <- sort(table(x$weekday), decreasing =T)
paste(names(tbl), tbl, collapse=", ")
})),
summary = unlist(lapply(iters, function(x){
paste(strtrim(x$weekday,2), collapse="-")
}))
)
scores <- scores[order(-scores$score),]
scores
print(paste0("Highest scoring: Iteration ", scores$iteration[[1]], ", Starting ", scores$start[[1]]))
selected <- scores$iteration[[1]]+1
timeline <- iters[[selected]] # auto selects the highest scoring one (remember to +1 to iter to get index)
library(timevis)
library(plyr)
# weeks to week numbers
weekn <- timeline$week
for (i in 1:length(unique(timeline$week))){
weekn <- gsub(unique(timeline$week)[[i]], i, weekn)
}
# calculate weekends within selected weeks
weekends <- data.frame(
start=as.Date(unique(timeline$week))+5, # saturday
end=as.Date(unique(timeline$week))+6, # sunday
type="background"
)
dates <- data.frame(
content= paste(
paste("<span style='font-size:12px;'>",strtrim(timeline$weekday,2)),
timeline$event),
start=timeline$start,
group=weekn,
end=as.Date(rep(NA, length(timeline$start))),
type=rep("point", nrow(dates))
)
tvdata <- rbind.fill(dates, weekends)
timevis(tvdata, width=1000,
groups = data.frame(id=unique(weekn), content=unique(timeline$week))
)
# ?timevis
shiny::runApp('GitHub/Darwin/easyVizR')
shiny::runApp('GitHub/Darwin/easyVizR')
shiny::runApp('GitHub/Darwin/easyVizR')
runApp('GitHub/Darwin/easyVizR')
runApp('GitHub/Darwin/easyVizR')
runApp('GitHub/Darwin/easyVizR')
runApp('GitHub/Darwin/easyVizR')
shiny::runApp('GitHub/Darwin/easyVizR')
shiny::runApp('GitHub/Darwin/easyVizR')
shiny::runApp('GitHub/Darwin/easyVizR')
runApp('GitHub/Darwin/easyVizR')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
