shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/eVITTA/easyVizR')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
gse_all <- getGEO("GSE153931", GSEMatrix=T)
View(gse_all)
View(gse_all)
annotation(gse_all[[1]])
annotation(gse_all[[2]])
head(gse_all)
annotation(gse_all[[2]])
annotation(gse_all[[1]])
runApp('~/Documents/eVITTA/easyGEO')
phenoData(gse_all)
pData(gse_all)
phenoData(gse_all[[1]])
pData(gse_all[[1]])
pData(gse_all[[1]])[["cell type:ch1"]]
unique(pData(gse_all[[1]])[["cell type:ch1"]])
unique(pData(gse_all[[1]])[["tissue:ch1"]])
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("SingleCellExperiment")
library(SingleCellExperiment)
# create a counts matrix from Poisson distribution
counts <- matrix(rpois(8, lambda = 10),ncol = 2,nrow = 4)
rownames(counts) = c("Lamp5","Fam19a1","Cnr1","Rorb") # genes
colnames(counts) = c("SRR2140028","SRR2140022") # cells
counts
sce <- SingleCellExperiment(assays = list(counts = counts))
sce <- SingleCellExperiment(assays = list(counts = counts, rowData=rownames(counts), colData=colnames(counts)))
sce <- SingleCellExperiment(assays = list(counts = counts, rowData=data.frame(gene = rownames(counts)), colData=data.frame(cell = colnames(counts))))
sce <- SingleCellExperiment(assays = list(counts = counts), rowData=data.frame(gene = rownames(counts)), colData=data.frame(cell = colnames(counts)))
se <- SummarizedExperiment(assays = list(counts = counts))
sce <- as(se, "SingleCellExperiment")
sce
sce
BiocManager::install("scRNAseq")
BiocManager::install("scRNAseq")
library(scRNAseq)
library(scRNAseq)
data(allen)
library(SingleCellExperiment)
library(scRNAseq)
data(allen)
library(scRNAseq)
data(allen)
library(SingleCellExperiment)
library(scRNAseq)
data(allen)
fluidigm <- ReprocessedFluidigmData()
fluidigm
install.packages('Seurat')
library(gdata)
library(Seurat)
Y
shiny::runApp('~/Documents/eVITTA/easyGEO')
runApp()
runApp()
runApp('~/Documents/eVITTA/easyGEO')
runApp('~/Documents/eVITTA/easyGEO')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp('~/Documents/eVITTA/easyVizR')
runApp('~/Documents/eVITTA/easyVizR')
runApp('~/Documents/eVITTA/easyVizR')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("dashboardthemes")
runApp('~/GitHub/Darwin/easyVizR')
runApp('~/GitHub/Darwin/easyVizR')
runApp()
runApp('~/GitHub/Darwin/easyVizR')
